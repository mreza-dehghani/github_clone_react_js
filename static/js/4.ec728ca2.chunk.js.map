{"version":3,"sources":["assets/img/spinner.svg","components/spinner/index.js","assets/img/profile-first-pr.svg","containers/home/private/style.js","containers/home/private/components/event/index.js","containers/home/private/components/leftSidebar/index.js","components/checkbox/index.js","containers/home/private/components/toggleTheme/index.js","containers/home/private/index.js"],"names":["className","src","spinner","alt","style","width","height","borderRadius","Wrapper","styled","div","variables","breakPoints","laptop","Sidebar","aside","colors","white","pxToRem","fontSize","base","Primary","fontWeight","semibold","Main","AthensGray","black","sm","Scorpion","ToggleTheme","data","actor","avatar_url","avatar","display_login","getDifferenceTimeFromNow","created_at","type","to","repo","name","username","length","map","item","key","full_name","checked","onClickAction","useState","isCheck","setIsCheck","useEffect","htmlFor","onClick","console","log","connect","state","getRepositoryListData","Repository","getRepositoryList","getPublicEventsLoading","Activity","getPublicEvents","loading","getPublicEventsData","dispatch","ActionActivity","getUserRepository","postData","ActionRepository","clearData","getPublicEventsFailure","getRepositoryListFailure","props","userInfo","getLocalStorage","login","emptyImg"],"mappings":"8FAAe,QAA0B,qC,iCCAzC,yBAGe,eAOd,OACC,qBAAKA,UAAU,kDAAf,SACC,qBAAKC,IAAKC,IAASC,IAAI,aAAaC,MARvB,CACdC,MAAO,OACPC,OAAQ,OACRC,aAAc,c,iCCPD,QAA0B,8C,uHCI5BC,EAAUC,IAAOC,IAAV,maAcEC,IAAUC,YAAYC,QAW/BC,EAAUL,IAAOM,MAAV,8VAECJ,IAAUK,OAAOC,MACpBC,YAAQ,IAEdA,YAAQ,IAAUA,YAAQ,IAC3BA,YAAQ,IAGJP,IAAUQ,SAASC,KACvBT,IAAUK,OAAOK,QACXV,IAAUW,WAAWC,SAGhBZ,IAAUC,YAAYC,OAEjCK,YAAQ,KACNA,YAAQ,KAIRM,EAAOf,IAAOC,IAAV,iiCAEMC,IAAUK,OAAOC,MACtBC,YAAQ,IACdA,YAAQ,IAELA,YAAQ,KASOP,IAAUK,OAAOS,WAGjCP,YAAQ,IACTA,YAAQ,IAKRP,IAAUK,OAAOU,MACbf,IAAUQ,SAASC,KACjBT,IAAUW,WAAWC,SAKhBZ,IAAUK,OAAOC,MACpBC,YAAQ,IAEdA,YAAQ,IAGLP,IAAUQ,SAASQ,GACvBhB,IAAUK,OAAOY,SACXjB,IAAUW,WAAWC,SAMnBZ,IAAUC,YAAYC,OACjCK,YAAQ,KACLA,YAAQ,IAAUA,YAAQ,IAAUA,YAAQ,IAGvCA,YAAQ,KAKdW,EAAcpB,IAAOM,MAAV,qLACdG,YAAQ,KACGP,IAAUK,OAAOC,MACpBC,YAAQ,IAEdA,YAAQ,IAELA,YAAQ,M,+BC5GR,cAAe,IAAZY,EAAW,EAAXA,KACjB,OACC,sBAAK9B,UAAU,8BAAf,UACC,qBAAKC,IAAK6B,EAAKC,MAAMC,YAAcC,IAAQ9B,IAAI,KAC/C,sBAAKH,UAAU,4BAAf,UACC,4BAAI8B,EAAKC,MAAMG,eAAiB,aAChC,sBAAMlC,UAAU,OAAhB,SAAwBmC,YAAyBL,EAAKM,cACtD,qBAAKpC,UAAU,oCAAf,SACC,sBAAKA,UAAU,OAAf,UACC,qBAAKA,UAAU,yCAAf,SAAyD8B,EAAKO,OAC9D,qBAAKrC,UAAU,+BAAf,SACC,cAAC,IAAD,CAAMsC,GAAE,WAAMR,EAAKS,KAAKC,MAAQxC,UAAU,iBAA1C,SACE8B,EAAKS,KAAKC,qBCbJ,cAAyB,IAAtBV,EAAqB,EAArBA,KAAqB,EAAfW,SACvB,OACC,eAAC3B,EAAD,WACC,6CACA,qBAAKd,UAAU,0BAAf,SACkB,IAAhB8B,EAAKY,QACLZ,EAAKa,KAAI,SAACC,EAAMC,GACf,OACC,sBAAK7C,UAAU,uDAAf,UACC,mBAAGA,UAAU,oBACb,cAAC,IAAD,CAAMsC,GAAE,WAAMM,EAAKE,WAAa9C,UAAU,iCAA1C,SACE4C,EAAKJ,SAHmEK,QAS/E,sBAAK7C,UAAU,uBAAf,UACC,qDACA,mBAAGA,UAAU,OAAb,4J,QCnBW,G,OAAA,YAAuC,IAApC+C,EAAmC,EAAnCA,QAASP,EAA0B,EAA1BA,KAAMQ,EAAoB,EAApBA,cAAoB,EACtBC,mBAASF,GADa,mBAC7CG,EAD6C,KACpCC,EADoC,KASpD,OAHAC,qBAAU,WACTD,EAAWJ,KACT,CAACA,IAEH,qBAAK/C,UAAU,OAAf,SACC,qBAAKA,UAAS,UAAKkD,EAAU,eAAiB,SAAWG,QAASb,EAAMc,QATrD,WACpBH,GAAYD,GACZF,KAOC,SACC,qBAAKhD,UAAS,UAAKkD,EAAU,oBAAsB,sBCZxC,aACd,OACC,eAACrB,EAAD,WACC,qBAAK7B,UAAU,OAAf,SACC,8BACC,mBAAGA,UAAU,sBADd,0BAKD,4EACA,cAAC,EAAD,CAAUwC,KAAK,QAAQO,SAAS,EAAMC,cAAe,kBAAMO,QAAQC,KAAI,U,kCC4D3DC,uBAnBS,SAAAC,GACvB,MAAO,CACNC,sBAAuBD,EAAME,WAAWC,kBAAkB/B,KAC1DgC,uBAAwBJ,EAAMK,SAASC,gBAAgBC,QACvDC,oBAAqBR,EAAMK,SAASC,gBAAgBlC,SAI3B,SAAAqC,GAC1B,MAAO,CACNH,gBAAiB,kBAAMG,EAASC,IAAeJ,oBAC/CK,kBAAmB,SAAAC,GAAQ,OAAIH,EAASI,IAAiBV,kBAAkBS,KAC3EE,UAAW,WACVL,EAASC,IAAeK,0BACxBN,EAASI,IAAiBG,gCAKdjB,EA9DD,SAAAkB,GAAU,IAEtBhB,EAMGgB,EANHhB,sBACAG,EAKGa,EALHb,uBACAI,EAIGS,EAJHT,oBACAF,EAGGW,EAHHX,gBACAK,EAEGM,EAFHN,kBACAG,EACGG,EADHH,UAEKI,EAAWC,YAAgB,YAUjC,OARAzB,qBAAU,WAGT,OAFAY,IACAK,EAAkBO,EAASE,OACpB,WACNN,OAEC,IAGF,eAAChE,EAAD,CAASR,UAAU,iBAAnB,UACC,cAAC,EAAD,CAAa8B,KAAM6B,EAAuBlB,SAAUmC,EAASE,QAC7D,cAACtD,EAAD,UACC,sBAAKxB,UAAU,gBAAf,UACE8D,GACA,qBAAK9D,UAAU,gCAAf,SACC,cAAC,IAAD,MAG8B,IAA/BkE,EAAoBxB,QACpBwB,EAAoBvB,KAAI,SAACC,EAAMC,GAC9B,OAAO,cAAC,EAAD,CAAiBf,KAAMc,GAAXC,OAEnBiB,GAAyD,IAA/BI,EAAoBxB,QAAgB,qBAAKzC,IAAK8E,WAG5E,qBAAK/E,UAAU,iBAAf,SACC,cAAC,EAAD","file":"static/js/4.ec728ca2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.80183838.svg\";","import React from 'react';\r\nimport spinner from '../../assets/img/spinner.svg';\r\n\r\nexport default () => {\r\n\tconst styles = {\r\n\t\twidth: '40px',\r\n\t\theight: '40px',\r\n\t\tborderRadius: ' 50%',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\" w-full h-full flex justify-center items-center\">\r\n\t\t\t<img src={spinner} alt=\"Loading...\" style={styles} />\r\n\t\t</div>\r\n\t);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/profile-first-pr.1dbfd0d1.svg\";","import styled from 'styled-components';\nimport { pxToRem } from '../../../helper/style';\nimport variables from '../../../constants/styleVariables';\n\nexport const Wrapper = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: flex-start;\n\tflex-wrap: wrap;\n\n\t.toggle-wrapper {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 100%;\n\t}\n\n\t@media (min-width: ${variables.breakPoints.laptop}px) {\n\t\tmargin: auto;\n\t\tflex-wrap: nowrap;\n\n\t\t.toggle-wrapper {\n\t\t\twidth: auto;\n\t\t\tdisplay: block;\n\t\t}\n\t}\n`;\n\nexport const Sidebar = styled.aside`\n\twidth: 100%;\n\tbackground-color: ${variables.colors.white};\n\tborder-radius: ${pxToRem(10)}rem;\n\theight: auto;\n\tpadding: ${pxToRem(20)}rem ${pxToRem(10)}rem;\n\tmargin: ${pxToRem(15)}rem 0;\n\n\t.repository-link {\n\t\tfont-size: ${variables.fontSize.base};\n\t\tcolor: ${variables.colors.Primary};\n\t\tfont-weight: ${variables.fontWeight.semibold};\n\t}\n\n\t@media (min-width: ${variables.breakPoints.laptop}px) {\n\t\tmargin-top: 0;\n\t\twidth: ${pxToRem(300)}rem;\n\t\tpadding: ${pxToRem(10)}rem;\n\t}\n`;\n\nexport const Main = styled.div`\n\twidth: 100%;\n\t//background-color: ${variables.colors.white};\n\tborder-radius: ${pxToRem(10)}rem;\n\tpadding: ${pxToRem(10)}rem;\n\tmargin-left: 0;\n\tmin-height: ${pxToRem(500)}rem;\n\theight: 400px;\n\toverflow: auto;\n\n\t.public-events {\n\t\t.public-event-card {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-start;\n\t\t\talign-items: start;\n\t\t\tborder-bottom: 1px solid ${variables.colors.AthensGray};\n\n\t\t\timg {\n\t\t\t\theight: ${pxToRem(50)}rem;\n\t\t\t\twidth: ${pxToRem(50)}rem;\n\t\t\t\tborder-radius: 50%;\n\t\t\t}\n\n\t\t\t.user-info-full-name {\n\t\t\t\tcolor: ${variables.colors.black};\n\t\t\t\tfont-size: ${variables.fontSize.base};\n\t\t\t\tfont-weight: ${variables.fontWeight.semibold};\n\t\t\t}\n\n\t\t\t.public-event-repository-card {\n\t\t\t\twidth: 100%;\n\t\t\t\tbackground-color: ${variables.colors.white};\n\t\t\t\tborder-radius: ${pxToRem(10)}rem;\n\t\t\t\theight: auto;\n\t\t\t\tpadding: ${pxToRem(10)}rem;\n\n\t\t\t\t.public-event-title {\n\t\t\t\t\tfont-size: ${variables.fontSize.sm};\n\t\t\t\t\tcolor: ${variables.colors.Scorpion};\n\t\t\t\t\tfont-weight: ${variables.fontWeight.semibold};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t@media (min-width: ${variables.breakPoints.laptop}px) {\n\t\twidth: ${pxToRem(600)}rem;\n\t\tmargin: 0 ${pxToRem(15)}rem ${pxToRem(15)}rem ${pxToRem(15)}rem;\n\n\t\t.public-events {\n\t\t\tmargin-right: ${pxToRem(25)}rem;\n\t\t}\n\t}\n`;\n\nexport const ToggleTheme = styled.aside`\n\twidth: ${pxToRem(200)}rem;\n\tbackground-color: ${variables.colors.white};\n\tborder-radius: ${pxToRem(10)}rem;\n\theight: auto;\n\tpadding: ${pxToRem(10)}rem;\n\tmargin-bottom: 30px;\n\tmin-height: ${pxToRem(150)}rem;\n`;\n","import { Link } from 'react-router-dom';\nimport avatar from '../../../../../assets/img/avatar.svg';\nimport { getDifferenceTimeFromNow } from '../../../../../helper/date';\n\nexport default ({ data }) => {\n\treturn (\n\t\t<div className=\"public-event-card mb-3 pb-4\">\n\t\t\t<img src={data.actor.avatar_url || avatar} alt=\"\" />\n\t\t\t<div className=\"w-100 ml-3 with-three-dot\">\n\t\t\t\t<b>{data.actor.display_login || 'username'}</b>\n\t\t\t\t<span className=\"ml-2\">{getDifferenceTimeFromNow(data.created_at)}</span>\n\t\t\t\t<div className=\"public-event-repository-card mt-2\">\n\t\t\t\t\t<div className=\"my-1\">\n\t\t\t\t\t\t<div className=\"public-event-title mb-1 with-three-dot\">{data.type}</div>\n\t\t\t\t\t\t<div className=\"d-flex justify-content-start\">\n\t\t\t\t\t\t\t<Link to={`/${data.repo.name}`} className=\"with-three-dot\">\n\t\t\t\t\t\t\t\t{data.repo.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { Link } from 'react-router-dom';\r\nimport { Sidebar } from '../../style';\r\n\r\nexport default ({ data, username }) => {\r\n\treturn (\r\n\t\t<Sidebar>\r\n\t\t\t<b>Repositories</b>\r\n\t\t\t<div className=\"mt-2 d-flex flex-column\">\r\n\t\t\t\t{data.length !== 0 &&\r\n\t\t\t\t\tdata.map((item, key) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"mb-2 d-flex justify-content-start align-items-center\" key={key}>\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-book mr-2\" />\r\n\t\t\t\t\t\t\t\t<Link to={`/${item.full_name}`} className=\"repository-link with-three-dot\">\r\n\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-3 border-top pt-3\">\r\n\t\t\t\t<b>Working with a team?</b>\r\n\t\t\t\t<p className=\"my-2\">\r\n\t\t\t\t\tGitHub is built for collaboration. Set up an organization to improve the way your team works together, and get\r\n\t\t\t\t\taccess to more features.\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</Sidebar>\r\n\t);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\n\r\nexport default ({ checked, name, onClickAction }) => {\r\n\tconst [isCheck, setIsCheck] = useState(checked);\r\n\tconst clickHandler = () => {\r\n\t\tsetIsCheck(!isCheck);\r\n\t\tonClickAction();\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tsetIsCheck(checked);\r\n\t}, [checked]);\r\n\treturn (\r\n\t\t<div className=\"mx-2\">\r\n\t\t\t<div className={`${isCheck ? 'label-active' : 'label'}`} htmlFor={name} onClick={clickHandler}>\r\n\t\t\t\t<div className={`${isCheck ? 'label-bulb-active' : 'label-bulb'}`} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { ToggleTheme, Wrapper } from '../../style';\r\nimport Checkbox from '../../../../../components/checkbox';\r\n\r\nexport default () => {\r\n\treturn (\r\n\t\t<ToggleTheme>\r\n\t\t\t<div className=\"my-2\">\r\n\t\t\t\t<b>\r\n\t\t\t\t\t<i className=\"fa fa-moon-o mr-2\" />\r\n\t\t\t\t\tDark mode is here!\r\n\t\t\t\t</b>\r\n\t\t\t</div>\r\n\t\t\t<p>Appearance to choose your theme preference.</p>\r\n\t\t\t<Checkbox name=\"theme\" checked={true} onClickAction={() => console.log(true)} />\r\n\t\t</ToggleTheme>\r\n\t);\r\n};\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Wrapper, Main } from './style';\r\nimport Event from './components/event';\r\nimport LeftSidebar from './components/leftSidebar';\r\nimport ToggleTheme from './components/toggleTheme';\r\nimport { ActionActivity, ActionRepository } from '../../../actions';\r\nimport { getLocalStorage } from '../../../helper/localStorage';\r\nimport Spinner from '../../../components/spinner';\r\nimport emptyImg from '../../../assets/img/profile-first-pr.svg';\r\n\r\nconst Index = props => {\r\n\tconst {\r\n\t\tgetRepositoryListData,\r\n\t\tgetPublicEventsLoading,\r\n\t\tgetPublicEventsData,\r\n\t\tgetPublicEvents,\r\n\t\tgetUserRepository,\r\n\t\tclearData,\r\n\t} = props;\r\n\tconst userInfo = getLocalStorage('userInfo');\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPublicEvents();\r\n\t\tgetUserRepository(userInfo.login);\r\n\t\treturn () => {\r\n\t\t\tclearData();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Wrapper className=\"container pt-5\">\r\n\t\t\t<LeftSidebar data={getRepositoryListData} username={userInfo.login} />\r\n\t\t\t<Main>\r\n\t\t\t\t<div className=\"public-events\">\r\n\t\t\t\t\t{getPublicEventsLoading && (\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t\t<Spinner />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{getPublicEventsData.length !== 0 &&\r\n\t\t\t\t\t\tgetPublicEventsData.map((item, key) => {\r\n\t\t\t\t\t\t\treturn <Event key={key} data={item} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t{!getPublicEventsLoading && getPublicEventsData.length === 0 && <img src={emptyImg} />}\r\n\t\t\t\t</div>\r\n\t\t\t</Main>\r\n\t\t\t<div className=\"toggle-wrapper\">\r\n\t\t\t\t<ToggleTheme />\r\n\t\t\t</div>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tgetRepositoryListData: state.Repository.getRepositoryList.data,\r\n\t\tgetPublicEventsLoading: state.Activity.getPublicEvents.loading,\r\n\t\tgetPublicEventsData: state.Activity.getPublicEvents.data,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tgetPublicEvents: () => dispatch(ActionActivity.getPublicEvents()),\r\n\t\tgetUserRepository: postData => dispatch(ActionRepository.getRepositoryList(postData)),\r\n\t\tclearData: () => {\r\n\t\t\tdispatch(ActionActivity.getPublicEventsFailure());\r\n\t\t\tdispatch(ActionRepository.getRepositoryListFailure());\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\r\n"],"sourceRoot":""}